<UserControl x:Class="MainHelper.UserControlProject.UserControlTask.TaskUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:MainHelper.UserControlProject.UserControlTask"
             mc:Ignorable="d" 
             DataContext="{Binding taskUserControlViewModelClass, Source={StaticResource Locator}}"
             xmlns:validators="clr-namespace:MainHelper.UserControlProject.UserControlTask.Validators"
             d:DesignHeight="500" d:DesignWidth="974">

    <UserControl.Resources>
        <Storyboard x:Key="OpenAddCategory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="addCategoryStackPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="80"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseAddCategory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="addCategoryStackPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="80"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ButtonCategoryOpenVisibil">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttonOpenAddCategory">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ButtonCategoryOpenVisibilCloseMenu">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttonOpenAddCategory">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ButtonCategoryRemoveVisibil">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttonRemoveCategory">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ButtonCategoryRemoveVisibilCloseMenu">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttonRemoveCategory">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        
        
        <Storyboard x:Key="OpenAddTask">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="addTaskStackPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="106"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseAddTask">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="addTaskStackPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="106"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ButtonTaskOpenVisibil">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttonOpenTaskStackPanel">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ButtonTaskOpenVisibilCloseMenu">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttonOpenTaskStackPanel">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ButtonCloseTaskVisibil">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttoRemoveTaskStackPanel">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ButtonCloseTaskVisibilCloseMenu">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="buttoRemoveTaskStackPanel">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Button.Click" SourceName="buttonOpenAddCategory">
            <BeginStoryboard Storyboard="{StaticResource OpenAddCategory}"/>
            <BeginStoryboard Storyboard="{StaticResource ButtonCategoryOpenVisibil}"/>
            <BeginStoryboard Storyboard="{StaticResource ButtonCategoryRemoveVisibil}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Button.Click" SourceName="buttonCloseAddCotegory">
            <BeginStoryboard Storyboard="{StaticResource CloseAddCategory}"/>
            <BeginStoryboard Storyboard="{StaticResource ButtonCategoryOpenVisibilCloseMenu}"/>
            <BeginStoryboard Storyboard="{StaticResource ButtonCategoryRemoveVisibilCloseMenu}"/>
        </EventTrigger>


        <EventTrigger RoutedEvent="Button.Click" SourceName="buttonOpenTaskStackPanel">
            <BeginStoryboard Storyboard="{StaticResource OpenAddTask}"/>
            <BeginStoryboard Storyboard="{StaticResource ButtonTaskOpenVisibil}"/>
            <BeginStoryboard Storyboard="{StaticResource ButtonCloseTaskVisibil}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Button.Click" SourceName="buttonCloseTaskStackPanel">
            <BeginStoryboard Storyboard="{StaticResource CloseAddTask}"/>
            <BeginStoryboard Storyboard="{StaticResource ButtonTaskOpenVisibilCloseMenu}"/>
            <BeginStoryboard Storyboard="{StaticResource ButtonCloseTaskVisibilCloseMenu}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock HorizontalAlignment="Left" Text="Task"  Foreground="#607D8B" Margin="5 7" FontSize="20"  FontWeight="Bold" FontFamily="Yu Gothic" />
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Background="#141A21">
                    <StackPanel >
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Margin" Value="5 0 0 0"/>
                                <Setter Property="FontWeight" Value="Thin"/>
                            </Style>
                            <Style TargetType="materialDesign:PackIcon">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Style>
                        </StackPanel.Resources>
                        <Button Margin="5 5 5 1" HorizontalContentAlignment="Left" Command="{Binding SortTaskAllCommand}" ToolTip="Sort by"  Background="#141A21"  Style="{StaticResource MaterialDesignFlatButton}" >
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="CalendarText"/>
                                <TextBlock Text="All" FontSize="14" />
                            </StackPanel>
                        </Button>
                        <Button Margin="5 1" HorizontalContentAlignment="Left" Command="{Binding SortTaskTodayCommand}" ToolTip="Sort by"  Background="#141A21" Style="{StaticResource MaterialDesignFlatButton}"  >
                            <StackPanel Orientation="Horizontal"  >
                                <materialDesign:PackIcon Kind="CalendarToday"/>
                                <TextBlock Text="Today" FontSize="14"/>
                            </StackPanel>
                        </Button>
                        <Button Margin="5 1 5 5" HorizontalContentAlignment="Left" ToolTip="Sort by" Command="{Binding SortTaskNextSevenDayCommand}" Background="#141A21" Style="{StaticResource MaterialDesignFlatButton}"  >
                            <StackPanel Orientation="Horizontal"  >
                                <materialDesign:PackIcon Kind="CalendarWeek"/>
                                <TextBlock Text="Next 7 days" FontSize="14"  />
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <Separator/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="15 0" Text="Category" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Yu Gothic" />
                        <Grid>
                            <Button x:Name="buttonOpenAddCategory" Height="35" ToolTip="Add" Width="35" Margin="10 0" Style="{StaticResource MaterialDesignIconButton}">
                                <materialDesign:PackIcon Kind="Add" />
                            </Button>
                            <Button x:Name="buttonRemoveCategory" Command="{Binding RemoveCategoryCommand}" ToolTip="Remove" Height="35" Width="35" Margin="10 0" Style="{StaticResource MaterialDesignIconButton}" Visibility="Hidden">
                                <materialDesign:PackIcon Kind="Remove" />
                            </Button>
                        </Grid>
                    </StackPanel>
                    <StackPanel x:Name="addCategoryStackPanel" Height="0">
                        <StackPanel Orientation="Horizontal" >
                            <materialDesign:PackIcon Kind="FormatColorFill" Width="20" Height="20" Foreground="WhiteSmoke" Margin="0 15 0 0 " />
                            <TextBox  materialDesign:HintAssist.Hint="Name" Width="82" Height="40" VerticalContentAlignment="Bottom" FontSize="14"  Foreground="White">
                                <TextBox.Text>
                                    <Binding Path="NameCategory" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validators:NameCategoryValidator/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <ComboBox Foreground="White" VerticalContentAlignment="Bottom" SelectedItem="{Binding ColorCategory}" materialDesign:HintAssist.Hint="Color" Width="46" Height="40"   Margin="2 0 " ItemsSource="{Binding ColorComboBoxCategory}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <materialDesign:PackIcon Margin="5,10" Height="20" Width="15" Foreground="{Binding}" Kind="CheckboxBlankCircle"  VerticalAlignment="Center" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel >
                        <UniformGrid Rows="1" Margin="5">
                            <Button Command="{Binding AddCategoryCommand}" Margin="5 1" ToolTip="Add" HorizontalContentAlignment="Left" Background="#141A21" Style="{StaticResource MaterialDesignFlatButton}"  >
                                <Border BorderBrush="White" BorderThickness="1">
                                    <materialDesign:PackIcon Kind="Check" VerticalAlignment="Center"  Foreground="White" />
                                </Border>
                            </Button>
                            <Button x:Name="buttonCloseAddCotegory" Command="{Binding HideAddCategoryCommand}" ToolTip="Hide" Margin="5 1" HorizontalContentAlignment="Left" Background="#141A21" Style="{StaticResource MaterialDesignFlatButton}"  >
                                <Border BorderBrush="White" BorderThickness="1">
                                    <materialDesign:PackIcon Kind="ChevronDoubleUp" VerticalAlignment="Center"  Foreground="White" />
                                </Border>
                            </Button>
                        </UniformGrid>
                    </StackPanel>
                    <Separator/>
                </StackPanel>
                <Grid Grid.Row="1" >
                    <ScrollViewer>
                        <ListView ItemsSource="{Binding Categories}" SelectedItem="{Binding SelectedCategory}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <RadioButton GroupName="Category" Background="{Binding ColorCategory}" ToolTip="Sort by" Command="{Binding taskUserControlViewModelClass.SortCategoryCommand, Source={StaticResource Locator}}" CommandParameter="{Binding}" BorderBrush="Red" BorderThickness="5"/>
                                        <TextBlock Margin="5" VerticalAlignment="Center" Foreground="{Binding ColorCategory}" Text="{Binding Name}" FontWeight="Bold" FontFamily="Yu Gothic" FontSize="14"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </ScrollViewer>
                </Grid>
            </Grid>
            <Grid Grid.Column="1" Background="Black" Margin="0 0 5 10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical"  Margin="20 6" VerticalAlignment="Top">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding SrotName}" Width="200" FontSize="22" Foreground="White"  FontWeight="Thin" FontFamily="Microsoft YaHei UI" VerticalAlignment="Bottom"  />
                        <ToggleButton Margin="280 0 0 0" IsChecked="{Binding CheckTask}" Style="{StaticResource MaterialDesignSwitchToggleButton}">
                            <materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                                <SolidColorBrush   Color="White" />
                            </materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                            <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                                <SolidColorBrush Color="Red" />
                            </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        </ToggleButton>
                        <TextBlock Margin="10 0"   Text="Completed tasks" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Yu Gothic"  />
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Margin="0 0 0 0">
                            <Grid>
                                <Button x:Name="buttonOpenTaskStackPanel" ToolTip="Add"  Height="35" Width="35" Style="{StaticResource MaterialDesignIconButton}">
                                    <materialDesign:PackIcon Kind="Add" Foreground="DarkRed" />
                                </Button>
                                <Button x:Name="buttoRemoveTaskStackPanel" Command="{Binding RemoveTaskCommand}" ToolTip="Remove"  Height="35" Width="35"  Style="{StaticResource MaterialDesignIconButton}" Visibility="Hidden">
                                    <materialDesign:PackIcon Kind="Remove" Foreground="DarkRed" />
                                </Button>
                            </Grid>
                            <TextBlock Margin="5 0" Text="Add task" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontFamily="Yu Gothic" />
                        </StackPanel>
                    </StackPanel>
                    <Separator />
                    <StackPanel x:Name="addTaskStackPanel" Height="0" >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Priority" Foreground="White" HorizontalAlignment="Center" Margin="50 0"  />
                            <TextBlock Text="Remind" Foreground="White" HorizontalAlignment="Center"  Margin="140 0" />
                            <TextBlock Text="Caterogy" Foreground="White" HorizontalAlignment="Center" Margin="40 0"  />
                        </StackPanel>
                        <StackPanel Height="42" VerticalAlignment="Top" HorizontalAlignment="Left" Orientation="Horizontal">
                            <ComboBox Margin="20 0"  Text="{Binding Priority}"  materialDesign:HintAssist.Hint="Without" Width="100" Height="40" VerticalContentAlignment="Bottom" FontSize="14"  Foreground="White">
                                <ComboBoxItem>
                                    High
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    Normal
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    Low
                                </ComboBoxItem>
                            </ComboBox>
                            <DatePicker  SelectedDate="{Binding Data}" Width="100" materialDesign:HintAssist.Hint="Pick Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}"
                                         Margin="50 4 0 0" Foreground="White"/>
                            <Button Command="{Binding DatePickerNow}"   VerticalAlignment="Bottom" ToolTip="Today's date" VerticalContentAlignment="Bottom"   HorizontalContentAlignment="Left"  Style="{StaticResource MaterialDesignFlatButton}" Margin="0 0 0 0" Width="49" Height="24" >
                                <materialDesign:PackIcon Height="17" Width="17"  Kind="CalendarArrowRight"   Foreground="#898989" />
                            </Button>
                            <materialDesign:TimePicker SelectedTime="{Binding Time}" Is24Hours="True"  Width="100" Margin="0 15 0 0"  Foreground="White"/>
                            
                            <ComboBox Margin="60 0" ItemsSource="{Binding Categories}" SelectedItem="{Binding TaskCategoryClass}"  Foreground="White" VerticalContentAlignment="Bottom"  materialDesign:HintAssist.Hint="Without" Width="100" Height="40" FontSize="14" >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Margin="5,10" Foreground="{Binding ColorCategory}" Kind="CheckboxBlankCircle"  VerticalAlignment="Center"/>
                                                <TextBlock Margin="5" VerticalAlignment="Center" Foreground="White" Text="{Binding Name}" FontFamily="Yu Gothic" FontSize="14"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <UniformGrid Rows="1" Margin="0 5" >
                                <Button Command="{Binding AddTaskCommand}"  HorizontalContentAlignment="Left" ToolTip="Add"  Style="{StaticResource MaterialDesignFlatButton}"  >
                                    <Border BorderBrush="DarkRed" BorderThickness="1">
                                        <materialDesign:PackIcon Kind="Check" VerticalAlignment="Center"  Foreground="DarkRed" />
                                    </Border>
                                </Button>
                                <Button Command="{Binding HideTaskPanel}"  x:Name="buttonCloseTaskStackPanel" ToolTip="Hide"   Margin="5 1" HorizontalContentAlignment="Left"  Style="{StaticResource MaterialDesignFlatButton}"  >
                                    <Border BorderBrush="DarkRed" BorderThickness="1">
                                        <materialDesign:PackIcon Kind="ChevronDoubleUp" VerticalAlignment="Center"  Foreground="DarkRed" />
                                    </Border>
                                </Button>
                            </UniformGrid>
                        </StackPanel>
                        <TextBox Text="{Binding Body}" Foreground="White" Height="48"  VerticalAlignment="Top" AcceptsReturn="True" TextWrapping="Wrap"
                            VerticalScrollBarVisibility="Auto" materialDesign:HintAssist.Hint="This is a text area, to enter task" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Row="1">
                    <ScrollViewer>
                        <ListView x:Name="ListViewTask" ItemsSource="{Binding Tasks}" SelectedItem="{Binding SelectedTask}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ListView.Resources>
                                <Style x:Key="StackPanelAlarm" >
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=CheckBoxAlarm, Path=IsChecked}"  Value="True">
                                            <Setter Property="Control.Background" Value="DarkRed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button ToolTip="Compled"  Command="{Binding taskUserControlViewModelClass.ComletedTaskComman, Source={StaticResource Locator}}" CommandParameter="{Binding}" Margin="5 0" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Background="Transparent"  >
                                            <materialDesign:PackIcon Kind="CheckboxBlankCircleOutline"/>
                                        </Button>
                                        <TextBlock Margin="10 0" TextWrapping="Wrap"  VerticalAlignment="Center"  Text="{Binding Body}" Width="500" Foreground="{Binding CategoryTask.ColorCategory}" FontSize="15"/>
                                        <StackPanel  Style="{StaticResource StackPanelAlarm}" Orientation="Horizontal" Width="100" VerticalAlignment="Top">
                                            <CheckBox x:Name="CheckBoxAlarm" IsChecked="{Binding CheckAlarm}" Visibility="Collapsed"/>
                                            <materialDesign:PackIcon Kind="Alarm"  ToolTip="{Binding AlarmTimeTask}" Width="20" Height="20" VerticalAlignment="Center" />
                                            <TextBlock Margin="2 0" Text="{Binding AlarmTimeTask.DayOfWeek}" ToolTip="{Binding AlarmTimeTask}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal"  Width="100" VerticalAlignment="Top">
                                            <materialDesign:PackIcon Margin="10 0"   Kind="PriorityLow" ToolTip="Priority" Width="20" Height="20" VerticalAlignment="Center" />
                                            <TextBlock Margin="2 0" Text="{Binding Priority}" ToolTip="Priority" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </ScrollViewer>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
